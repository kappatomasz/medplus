/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.kappadev.medplus.ui.profile;

import com.kappadev.medplus.data.profile.Profile;
import com.kappadev.medplus.data.profile.ProfileService;
import com.kappadev.medplus.ui.custom.MessagePopUp;
import com.kappadev.medplus.ui.main.MainMenuPanel;
import com.kappadev.medplus.utils.StringUtils;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

/**
 *
 * @author tburzynski
 */
@Component
public class SelectProfilePopUp extends javax.swing.JFrame {

    @Autowired
    ProfileService profileService;

    @Autowired
    private AddOrUpdateProfilePanel addOrUpdateProfilePanel;

    @Autowired
    private MainMenuPanel mainMenuPanel;

    List<Profile> profileList;

    public void initSelectProfilePopUp() {
        initComponents();
        refreshUserComboBox();
    }
    
    public void refreshUserComboBox(){
        profilesComboBox.removeAllItems();
        DefaultComboBoxModel<Profile> comboBoxModel = new DefaultComboBoxModel<>();
        profileList = profileService.getAllProfiles();
        profileList.stream().forEach((profile) -> {
            comboBoxModel.addElement(profile);
        });
        profilesComboBox.setModel(comboBoxModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        profilesComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        okBtn = new javax.swing.JButton();
        addNewProfileBtn = new javax.swing.JButton();
        resetPasswordBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        passwordTxtFld = new javax.swing.JTextField();
        forgottenPasswordChechBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(640, 480));

        jLabel1.setText("Wybierz użytkownika");

        okBtn.setText("OK");
        okBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okBtnActionPerformed(evt);
            }
        });

        addNewProfileBtn.setText("Dodaj");
        addNewProfileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewProfileBtnActionPerformed(evt);
            }
        });

        resetPasswordBtn.setText("Resetuj");
        resetPasswordBtn.setEnabled(false);
        resetPasswordBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetPasswordBtnActionPerformed(evt);
            }
        });

        jLabel2.setText("Hasło");

        forgottenPasswordChechBox.setText("Zapomniałem hasła");
        forgottenPasswordChechBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forgottenPasswordChechBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(passwordTxtFld)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(okBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addNewProfileBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(resetPasswordBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(profilesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addComponent(jLabel1))
                            .addComponent(jLabel2)
                            .addComponent(forgottenPasswordChechBox))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(profilesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(passwordTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(forgottenPasswordChechBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okBtn)
                    .addComponent(addNewProfileBtn)
                    .addComponent(resetPasswordBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okBtnActionPerformed

        if (null != (Profile) profilesComboBox.getModel().getSelectedItem()
                && !org.springframework.util.StringUtils.isEmpty(((Profile) profilesComboBox.getModel().getSelectedItem()).getName())
                && checkIfPasswordMatches((Profile) profilesComboBox.getModel().getSelectedItem())) {
            mainMenuPanel.initMainMenuPanel();
            mainMenuPanel.setVisible(true);
            this.dispose();
        } else if (profileList.isEmpty()) {
            MessagePopUp message = new MessagePopUp();
            message.setText("Brak użytkowników w bazie, dodaj nowego użytkownika !");
            message.setVisible(true);
        } else if(passwordTxtFld.getText().length() == 0){
            MessagePopUp message = new MessagePopUp();
            message.setText("Proszę wpisać hasło !");
            message.setVisible(true);
        } else if (null == (Profile) profilesComboBox.getModel().getSelectedItem()){
            MessagePopUp message = new MessagePopUp();
            message.setText("Nie wybrano żadnego użytkownika !");
            message.setVisible(true);
        }
    }//GEN-LAST:event_okBtnActionPerformed

    private void addNewProfileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewProfileBtnActionPerformed
        addOrUpdateProfilePanel.initAddOrUpdateProfilePanel();
        addOrUpdateProfilePanel.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_addNewProfileBtnActionPerformed

    private void resetPasswordBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetPasswordBtnActionPerformed
        Profile profile = (Profile) profilesComboBox.getSelectedItem();
        if (profile != null) {
            if (forgottenPasswordChechBox.isSelected() && null == profile.getEmail()) {
                MessagePopUp messagePopUp = new MessagePopUp();
                messagePopUp.setText("Podczas tworzenia swojego profilu nie podałeś adresu e-mail na który wysłalibyśmy nowe tymczasowe hasło."
                        + " Możesz ustawić teraz nowe hasło ale twój profil w aplikacji nie jest bezpieczny!"
                        + " Każdy kto zna login i hasło do twojego komputera może zmienić hasło do twojego profilu!");
                addOrUpdateProfilePanel.initAddOrUpdateProfilePanel((Profile) profilesComboBox.getSelectedItem());
                addOrUpdateProfilePanel.setVisible(true);
            } else if (forgottenPasswordChechBox.isSelected() && null != profile.getEmail()) {
                MessagePopUp messagePopUp = new MessagePopUp();
                messagePopUp.setText("Nowe hasło zostało wysłane na twój adres e-mail podany w profilu");
                //TODO(tburzynski) add webservice here 
            }
        }

    }//GEN-LAST:event_resetPasswordBtnActionPerformed

    private void forgottenPasswordChechBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forgottenPasswordChechBoxActionPerformed
        if (forgottenPasswordChechBox.isSelected()) {
            resetPasswordBtn.setEnabled(true);
        } else {
            resetPasswordBtn.setEnabled(false);
        }
    }//GEN-LAST:event_forgottenPasswordChechBoxActionPerformed

    private boolean checkIfPasswordMatches(Profile profile) {
        return profile.getPassword().equals(StringUtils.getPasswordHash(passwordTxtFld.getText()));
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewProfileBtn;
    private javax.swing.JCheckBox forgottenPasswordChechBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton okBtn;
    private javax.swing.JTextField passwordTxtFld;
    private javax.swing.JComboBox<Profile> profilesComboBox;
    private javax.swing.JButton resetPasswordBtn;
    // End of variables declaration//GEN-END:variables
}
