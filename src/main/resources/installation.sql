CREATE USER IF NOT EXISTS ADMIN SALT '9aa4d3837de9ea28' HASH '61d66f02b03aaf16d09ce12a633ea6cf4581a6503fddcaf1497cd32e1a5f93d2' ADMIN;



drop table attachment if exists;
drop table disease_to_patient_log if exists;
drop table diseases if exists;
drop table meeting if exists;
drop table patient_log if exists;
drop table patients if exists;
drop table states if exists;
create table attachment (id bigint generated by default as identity, content blob, content_type varchar(50), file_name varchar(255), selected boolean not null, patient_log_id bigint, primary key (id));
create table disease_to_patient_log (id bigint generated by default as identity, disease_id bigint not null, patient_log_id bigint not null, primary key (id));
create table diseases (id bigint generated by default as identity, description blob, name varchar(500) not null, primary key (id));
create table meeting (id bigint generated by default as identity, date timestamp not null, description blob, title varchar(255) not null, primary key (id));
create table patient_log (id bigint generated by default as identity, modification_date timestamp not null, note varchar(255), primary key (id));
create table patients (id bigint not null, city varchar(100), flat varchar(10), house_no varchar(10), name varchar(100), phone varchar(50), post_code varchar(6), second_name varchar(100), selected boolean not null, street varchar(200), surname varchar(100), meeting_id bigint, patient_log_id bigint, state_id integer, primary key (id));
create table states (id integer generated by default as identity, name varchar(255) not null, primary key (id));
alter table states add constraint UK_nau09mwrvhjj0n0a6gfo5xmp3  unique (name);
alter table attachment add constraint FK_fdtd44hqitdj1d8ivv1pvosog foreign key (patient_log_id) references patient_log;
alter table disease_to_patient_log add constraint FK_tqosq41jwvkui40j998ah0p7n foreign key (disease_id) references diseases;
alter table disease_to_patient_log add constraint FK_55uju961qlpa68c7qs9pfjjo6 foreign key (patient_log_id) references patient_log;
alter table patients add constraint FK_l0qhrw4ow530lsj2t2ovnwdbe foreign key (meeting_id) references meeting;
alter table patients add constraint FK_64rsw30gbheyhdr0ux6uifpaf foreign key (patient_log_id) references patient_log;
alter table patients add constraint FK_fti2ugtmeb75i5mepvtlg33vd foreign key (state_id) references states;


INSERT INTO STATES(NAME) VALUES ('brak');
INSERT INTO STATES(NAME) VALUES (STRINGDECODE('dolno\u015bl\u0105skie'));
INSERT INTO STATES(NAME) VALUES ('kujawsko-pomorskie');
INSERT INTO STATES(NAME) VALUES ('lubelskie');
INSERT INTO STATES(NAME) VALUES ('lubuskie');
INSERT INTO STATES(NAME) VALUES (STRINGDECODE('\u0142\u00f3dzkie'));
INSERT INTO STATES(NAME) VALUES (STRINGDECODE('ma\u0142opolskie'));
INSERT INTO STATES(NAME) VALUES ('mazowieckie');
INSERT INTO STATES(NAME) VALUES ('opolskie');
INSERT INTO STATES(NAME) VALUES ('podlaskie');
INSERT INTO STATES(NAME) VALUES ('podkarpackie');
INSERT INTO STATES(NAME) VALUES ('pomorskie');
INSERT INTO STATES(NAME) VALUES (STRINGDECODE('\u015bl\u0105skie'));
INSERT INTO STATES(NAME) VALUES (STRINGDECODE('\u015bwi\u0119tokrzyskie'));
INSERT INTO STATES(NAME) VALUES (STRINGDECODE('warmi\u0144sko-mazurskie'));
INSERT INTO STATES(NAME) VALUES ('wielkopolskie');
INSERT INTO STATES(NAME) VALUES ('zachodnio-pomorskie');